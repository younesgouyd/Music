CREATE TABLE folder (
    id INTEGER NOT NULL PRIMARY KEY AUTOINCREMENT,
    name TEXT NOT NULL,
    parent_folder_id INTEGER REFERENCES folder(id) ON UPDATE CASCADE ON DELETE CASCADE,
    creation_datetime INTEGER NOT NULL,
    update_datetime INTEGER NOT NULL
);

CREATE TABLE album (
    id INTEGER NOT NULL PRIMARY KEY AUTOINCREMENT,
    name TEXT NOT NULL,
    image BLOB,
    release_date TEXT,
    creation_datetime INTEGER NOT NULL,
    update_datetime INTEGER NOT NULL
);

CREATE TABLE track (
    id INTEGER NOT NULL PRIMARY KEY AUTOINCREMENT,
    name TEXT NOT NULL,
    folder_id INTEGER NOT NULL REFERENCES folder(id) ON UPDATE CASCADE ON DELETE CASCADE,
    album_id INTEGER REFERENCES album(id) ON UPDATE CASCADE ON DELETE SET NULL,
    audio_uri TEXT,
    video_uri TEXT,
    lyrics TEXT,
    album_track_number INTEGER,
    duration INTEGER NOT NULL,
    creation_datetime INTEGER NOT NULL,
    update_datetime INTEGER NOT NULL,
    CHECK (
        (audio_uri IS NOT NULL AND audio_uri != '')
        OR (video_uri IS NOT NULL AND video_uri != '')
    )
);

CREATE TABLE artist (
    id INTEGER NOT NULL PRIMARY KEY AUTOINCREMENT,
    name TEXT NOT NULL,
    image BLOB,
    creation_datetime INTEGER NOT NULL,
    update_datetime INTEGER NOT NULL
);

CREATE TABLE playlist (
    id INTEGER NOT NULL PRIMARY KEY AUTOINCREMENT,
    name TEXT NOT NULL,
    folder_id INTEGER REFERENCES folder(id) ON UPDATE CASCADE ON DELETE CASCADE,
    image BLOB,
    creation_datetime INTEGER NOT NULL,
    update_datetime INTEGER NOT NULL
);

CREATE TABLE artist_track_cross_ref (
    id INTEGER NOT NULL PRIMARY KEY AUTOINCREMENT,
    artist_id INTEGER NOT NULL REFERENCES artist(id) ON UPDATE CASCADE ON DELETE CASCADE,
    track_id INTEGER NOT NULL REFERENCES track(id) ON UPDATE CASCADE ON DELETE CASCADE,
    creation_datetime INTEGER NOT NULL,
    update_datetime INTEGER NOT NULL
);

CREATE TABLE playlist_track_cross_ref (
    id INTEGER NOT NULL PRIMARY KEY AUTOINCREMENT,
    playlist_id INTEGER NOT NULL REFERENCES playlist(id) ON UPDATE CASCADE ON DELETE CASCADE,
    track_id INTEGER NOT NULL REFERENCES track(id) ON UPDATE CASCADE ON DELETE CASCADE,
    creation_datetime INTEGER NOT NULL,
    update_datetime INTEGER NOT NULL,
    UNIQUE (playlist_id, track_id)
);
